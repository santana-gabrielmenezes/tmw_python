Atalhos VS Code:

    Shift + Alt + i -> posiciona um cursor de ferente no final de cada linha selecionada

    Ctrl + d -> seleciona a próxima aparição do termo selecionado

    Ctrl + h -> abre uma caixa de diálogo para localizar e substituir uma palavra

    Home / End -> posiciona o(s) cursor(s) no início / fim da(s) linha(s)

comandos python:

    print(...) -> imprime, no terminal interpretador python, o texto inserido como parâmetro

    type(...) -> retorna o tipo de um objeto

    input(...) -> recebe infromação do usuário SEMPRE NO FORMATO DE STRING
        input(<texto>) -> exibe um texto antes de aguardara a infromação do usuário
    
    int(...) -> converte em tipo inteiro

    bool(...) -> retorna o booleano equivalente

    if <condições> : <comandos> -> executa o(s) comando(s) apenas se a condição for verdadeira

    else : <comandos> -> deve ser inserido após do if e funciona executando o comando quando a condição do(s) if não são verdadeiras

    elif <condições> : <comandos> -> funciona como um condional extra específico para quando a condição do if anterior não é verdadeira. É usado para deixar o código menos verboso substituindo o else seguido do if apenas pelo elif. Portanto ele é obrigatoriamente usado entre o if e o else

    <condição> and <condição> -> operador lógico and

    <expressão> == <expressão> -> operador lógico de igualdade expecificamente para os componentes de um objeto. retorna true se os componentes de dois objetos forem iguais, mas se forem objetos diferentes retorna false

    # %% -> inicia uma célula de execulção, as linhas a seguir serão executadas no Interactive py
        para abrir o "Interactive py" basta executar um .py iniciado por "# %%"

    /n -> insere uma quebra de texto (parágrafo) na string

    <dividendo> % <divisor> -> retorna o resto da divisão

    <dividendo> // <divisor> -> retorna a parte inteira do resultado da divisão

    <base> ** <expoente> -> retorna o resultado da exponenciação

    <nome da variável> = <valor da variável> -> inicializa e atribui valor a uma variável
        em células de, as variável apresentaram o último valor atribuido, não necessariamente o valor atribuido em linhas superiores

Nota:

    python <caminho do arquivo> <nome do arquivo .py> ->
        para acessar o interpretador python em qualquer terminal, basta escrever "python". O aparecimento de >>> indica que o interpretador foi aberto com sucesso
        é necessário ter instalado o python anteriormente
        quando fora do interpretador, 

    para sair do interpretador pytho utilize o comando "exit()" + Enter

    para comentar, basta usar o # no início da linha

    entre o if e o else não podem haver comandos (exceto pelo elif). o if/else funciona como um bloco de comando onde a identação (especificamente identação de 4 espaços) identifica o bloco.

    para o condicional a estrutura é if (obrigatório apenas um e no início), elif (opcional quantos desejar entre o if e o else) e else (opcional apenas um e no final)

    o true e o false podem ser executados como 1 e 0 inclusive em operações matemáticas

    o operador and pode ser interpretado como multiplicação enquanto o or pode ser interpretado como soma

    tabela verdade and :    true    and     true        1 * 1       1 (true)
                            true    and     false   =   1 * 0   =   0 (false)
                            false   and     true        0 * 1       0 (false)
                            false   and     false       0 * 0       0 (false)

    tabela verdade or :     true    or     true        1 + 1       2 (true)
                            true    or     false   =   1 + 0   =   1 (true)
                            false   or     true        0 + 1       1 (true)
                            false   or     false       0 + 0       0 (false)